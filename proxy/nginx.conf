events {
    # Define the maximum number of simultaneous connections
    worker_connections 1024;
}

http {
    # Include MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Define the log format for access logs
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    # Enable Gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_vary on;
    gzip_min_length 1000;

    # Enable Brotli compression
    #brotli on;
    #brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    #brotli_comp_level 6;
    #brotli_static on;


    # Define the access log file location
    access_log /var/log/nginx/access.log main;

    # Define the sendfile setting
    sendfile on;

    # Define the TCP_nopush setting
    tcp_nopush on;

    # Define the TCP_nodelay setting
    tcp_nodelay on;

    # Define the keepalive_timeout setting
    keepalive_timeout 65;

    # Server block for beta.fightcore.gg
    server {
        # Define the server name
        server_name beta.fightcore.gg;

        # Listen on port 80 for HTTP requests
        listen 443 ssl;
	    http2 on;

        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;

        # intermediate configuration.
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	    ssl_ciphers 'HIGH:!aNULL:!MD5';

        # Define the location block
        location / {
            # Proxy pass to the upstream server running on port 5001
            proxy_pass http://fightcore_beta_frontend:80;

            # Set additional proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    server {
        # Define the server name
        server_name fightcore.gg www.fightcore.gg;

        # Listen on port 80 for HTTP requests
        listen 443 ssl;
	    http2 on;

        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;

        # intermediate configuration.
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	    ssl_ciphers 'HIGH:!aNULL:!MD5';

        # Define the location block
        location / {
            # Proxy pass to the upstream server running on port 5001
            proxy_pass http://fightcore_frontend:80;

            # Set additional proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    server {
        listen 80;
	    server_name drive.fightcore.gg;
	    location / {
		    return 301 https://drive.google.com/drive/folders/14rcZ8ed43hWOJaxQhHsB-hcAgxWubRaz?usp=sharing;
	    }
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name beta.fightcore.gg;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 80;
        server_name fightcore.gg www.fightcore.gg;

        location / {
            return 301 https://$host$request_uri;
        }
    }
}
